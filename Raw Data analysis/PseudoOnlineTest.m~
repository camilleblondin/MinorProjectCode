% Labelling of the data for pseudo online testing
clc;
clear all;
close all;

load('s02s3r1_rawData.mat');
%%
% parameters for spectrogram
samplingfreq = 512;
desiredwindowduration = 0.5; %seconds
delay = 1/samplingfreq;
delay2 = 1/16;
window = desiredwindowduration/delay;
overlap = (desiredwindowduration - delay2) * samplingfreq;
freq_of_interest = [4:1:40];
nb_of_channels = 16;
PSDsignal = [];

S = applyCAR(rawdata.signal(:,1:16));

for i =1: nb_of_channels
    [~,~,psdtime,psdsignal] = spectrogram(S(:,i),window,overlap,freq_of_interest,samplingfreq);
    PSDsignal = [PSDsignal;psdsignal];
end
%%
% Now we labbel the data => lets focus on the right events as a start and
% label as class 1 the data on a windows around
screeningwindowlength = 1;
window_of_interest = floor(1 * 16);

nb_of_windows = floor(size((1:screeningwindowlength:(size(PSDsignal,2) - screeningwindowlength)),2));

classlabel = zeros(1,nb_of_windows);

event_position = rawdata.events.position;
event_labels = rawdata.events.labels;
Right_start_index = event_position(find(event_labels == 'right')+1);

classlabel = zeros(1,nb_of_windows);

Right_start_index
classlabel()


signal_windows= [];
windowcount = 0;
%%
for j = 1:length(Right_start_index)
for i = 1:(size(PSDsignal,2) - screeningwindowlength)
    
        if i >= Right_start_index(j)- window_of_interest/2  && i <= Right_start_index(j) + window_of_interest/2
            classlabel(i) = 1;
        end
    end
end